# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    event_images_directory: '%kernel.project_dir%/public/uploads'
    flouci_app_token: '%env(FLOUCI_APP_TOKEN)%'
    flouci_app_secret: '%env(FLOUCI_APP_SECRET)%'
    tickets_directory: '%kernel.project_dir%/public/uploads/tickets'
    google_api_credentials: '%kernel.project_dir%/config/google_credentials.json'
    app.mailer_dsn.api: '%env(MAILER_DSN_API)%'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true
        autoconfigure: true
        bind:
            string $appToken: '%env(FLOUCI_APP_TOKEN)%'
            string $appSecret: '%env(FLOUCI_APP_SECRET)%'
            string $ticketsDirectory: '%tickets_directory%'
            string $eventImagesDirectory: '%event_images_directory%'
            string $credentialsPath: '%google_api_credentials%'
            string $projectDir: '%kernel.project_dir%'
            string $apiMailerDsn: '%env(MAILER_DSN_API)%'
            string $smtpMailerDsn: '%env(MAILER_DSN_SMTP)%'
            string $secretKey: '%env(RECAPTCHA_SECRET_KEY)%'
            string $siteKey: '%env(RECAPTCHA_SITE_KEY)%'
            string $infoBipapiUrl: 'https://api.infobip.com/sms/2/text/advanced'
            string $infoBipapiKey: 'cd3930c7c8bf8108580b74563b7e6f2e-03990690-4602-403a-b38b-a8bd99e27736'
            string $infoBipsender: '447491163443'
    # Container alias for our subscriber
    Symfony\Component\DependencyInjection\ContainerInterface:
        alias: 'service_container'
        public: true
    App\Service\UserModule\InfoBipSMS:
        arguments:

            $apiKey: 'cd3930c7c8bf8108580b74563b7e6f2e-03990690-4602-403a-b38b-a8bd99e27736'
            $sender: '447491163443'
    App\Service\UserModule\UserService:
        arguments:
            $administratorRepository: '@App\Repository\UserModule\AdministratorRepository'
            $eventPlannerRepository: '@App\Repository\UserModule\EventPlannerRepository'
            $clientRepository: '@App\Repository\UserModule\ClientRepository'
            $instructorRepository: '@App\Repository\UserModule\InstructorRepository'
    App\Service\UserModule\UserEmailService:
    App\Service\EmailService:
    App\Service\FlouciPayment:
        arguments:
            $client: '@http_client'
    App\Service\TicketGeneratorService:
        arguments:
    App\Service\GoogleCalendarService:
        arguments:
            $credentialsPath: '%google_api_credentials%'
        public: true
    App\Service\PartnershipReminderService:
        arguments:
            $googleCalendarService: '@App\Service\GoogleCalendarService'
            $partnershipRepository: '@App\Repository\PartnershipRepository'
            $projectDir: '%kernel.project_dir%'
            $filesystem: '@filesystem'
    App\Command\PartnershipEndReminderCommand:
        arguments:
            $projectDir: '%kernel.project_dir%'
    App\Controller\GoogleAuthController:
        arguments:
            $googleCalendarService: '@App\Service\GoogleCalendarService'
            $projectDir: '%kernel.project_dir%'
            $filesystem: '@filesystem'
    App\Service\UserModule\RecaptchaValidator:
    App\Form\WorkshopType:
        arguments: ['@doctrine.orm.entity_manager']
        tags: [form.type]
    App\Controller\UserModule\AccessDeniedController: ~
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
