<!DOCTYPE html>
<html lang="fr">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
        <meta name="description" content="Modifier un lieu" />
        <meta name="author" content="" />
        <title>Modifier un lieu</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
        <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
        <style>
            body { background-color: #f8f9fc; }
            .card { border: none; border-radius: 0.5rem; box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15); }
            .page-header-dark { background: linear-gradient(to right, #4e73df, #224abe); color: white; }
            .form-control, .form-select { padding: 0.5rem 0.75rem; }
            .form-error { color: #dc3545; font-size: 0.875em; }
            #map { height: 300px; margin-top: 1rem; }
        </style>
    </head>
    <body>
        <header class="page-header page-header-dark bg-gradient-primary-to-secondary pb-10">
            <div class="container-xl px-4">
                <div class="page-header-content pt-4">
                    <div class="row align-items-center justify-content-between">
                        <div class="col-auto mt-4">
                            <h1 class="page-header-title">
                                <div class="page-header-icon"><i class="bi bi-geo-alt"></i></div>
                                Modifier un lieu
                            </h1>
                        </div>
                        <div class="col-12 col-xl-auto mt-4">
                            <a href="{{ path('app_venue_index') }}" class="btn btn-light">
                                <i class="bi bi-arrow-left me-1"></i>
                                Retour
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </header>

        <div class="container-xl px-4 mt-n10">
            <div class="card mb-4">
                <div class="card-header">Détails du lieu</div>
                <div class="card-body">
                    {{ form_start(form, {'attr': {'novalidate': 'novalidate'}}) }}

                    {% if not form.vars.valid %}
                        <div class="alert alert-danger alert-dismissible fade show mb-4">
                            <span>Veuillez corriger les erreurs dans le formulaire.</span>
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    {% endif %}

                    <!-- Adresse -->
                    <div class="mb-4">
                        {{ form_label(form.address, 'Adresse', {'label_attr': {'class': 'form-label'}}) }}
                        <span class="text-danger">*</span>
                        {{ form_widget(form.address, {'attr': {'class': 'form-control' ~ (form.address.vars.errors|length ? ' is-invalid' : ''), 'id': 'venue_address'}}) }}
                        {{ form_errors(form.address) }}
                        <div id="map" style="height: 300px; margin-top: 1rem;"></div>
                    </div>

                    <!-- Capacité -->
                    <div class="mb-4">
                        {{ form_label(form.capacity, 'Capacité', {'label_attr': {'class': 'form-label'}}) }}
                        <span class="text-danger">*</span>
                        {{ form_widget(form.capacity, {'attr': {'class': 'form-control' ~ (form.capacity.vars.errors|length ? ' is-invalid' : '')}}) }}
                        {{ form_errors(form.capacity) }}
                    </div>

                    <!-- Ressource -->
                    <div class="mb-4">
                        {{ form_label(form.ressource, 'Ressource associée', {'label_attr': {'class': 'form-label'}}) }}
                        <span class="text-danger">*</span>
                        {{ form_widget(form.ressource, {'attr': {'class': 'form-select' ~ (form.ressource.vars.errors|length ? ' is-invalid' : '')}}) }}
                        {{ form_errors(form.ressource) }}
                    </div>

                    <!-- Boutons d'action -->
                    <div class="d-flex justify-content-between mt-5">
                        <a href="{{ path('app_venue_index') }}" class="btn btn-outline-secondary">
                            <i class="bi bi-x-circle me-1"></i>
                            Annuler
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-save me-1"></i>
                            Enregistrer
                        </button>
                    </div>

                    {{ form_end(form) }}
                </div>
            </div>
        </div>

        <footer class="footer-admin mt-auto footer-light">
            <div class="container-xl px-4">
                <div class="row">
                    <div class="col-md-6 small">Copyright © Votre Application {{ "now"|date("Y") }}</div>
                    <div class="col-md-6 text-md-end small">
                        <a href="#!">Mentions légales</a>
                        ·
                        <a href="#!">Conditions d'utilisation</a>
                    </div>
                </div>
            </div>
        </footer>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
        <script>
            async function geocodeAddress(address) {
                try {
                    const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`);
                    const data = await response.json();
                    if (data.length > 0) {
                        return { lat: parseFloat(data[0].lat), lng: parseFloat(data[0].lon) };
                    }
                    return null;
                } catch (error) {
                    console.error('Erreur de géocodage:', error);
                    return null;
                }
            }

            document.addEventListener('DOMContentLoaded', async function() {
                // Initialisation de la carte Leaflet
                const map = L.map('map').setView([48.8566, 2.3522], 13); // Centré sur Paris par défaut
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                }).addTo(map);

                let marker = null;

                // Fonction pour mettre à jour la carte
                async function updateMap() {
                    const addressInput = document.getElementById('venue_address');
                    const address = addressInput.value;

                    if (address) {
                        const coords = await geocodeAddress(address);
                        if (coords) {
                            map.setView([coords.lat, coords.lng], 13);
                            if (marker) {
                                marker.setLatLng([coords.lat, coords.lng]);
                            } else {
                                marker = L.marker([coords.lat, coords.lng]).addTo(map);
                            }
                        }
                    }
                }

                // Écouter les changements dans le champ address
                const addressInput = document.getElementById('venue_address');
                addressInput.addEventListener('input', updateMap);

                // Initialiser la carte avec l'adresse actuelle
                updateMap();
            });
        </script>
    </body>
</html>