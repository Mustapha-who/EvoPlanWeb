{% extends 'base.html.twig' %}

{% block title %}Nouveau Feedback{% endblock %}

{% block body %}
    <header class="page-header page-header-dark bg-gradient-primary-to-secondary pb-10">
        <div class="container-xl px-4">
            <div class="page-header-content pt-4">
                <div class="row align-items-center justify-content-between">
                    <div class="col-auto mt-4">
                        <h1 class="page-header-title">
                            <div class="page-header-icon"><i data-feather="message-square"></i></div>
                            Nouveau Feedback
                        </h1>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <div class="container-xl px-4 mt-n10">
        <div class="card mb-4">
            <div class="card-header bg-white">
                <div class="d-flex justify-content-between align-items-center">
                    <h2 class="card-title mb-0 text-primary">Formulaire de feedback</h2>
                    <i data-feather="edit-3" class="text-muted"></i>
                </div>
            </div>
            <div class="card-body">
                {% for flashMessage in app.flashes('success') %}
                    <div class="alert alert-success">{{ flashMessage }}</div>
                {% endfor %}

                {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="mb-3">
                                {{ form_label(form.comments, null, {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(form.comments, {
                                    'attr': {
                                        'class': 'form-control' ~ (form.comments.vars.errors|length ? ' is-invalid' : ''),
                                        'placeholder': 'Vos commentaires...',
                                        'style': 'height: 150px',
                                        'required': 'required',
                                        'minlength': '10',
                                        'maxlength': '1000'
                                    }
                                }) }}
                                {{ form_errors(form.comments) }}
                                <div class="form-text">10 caractères minimum</div>
                                <div class="char-counter small text-muted text-end">
                                    <span id="char-count">0</span>/1000 caractères
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="mb-3">
                                {{ form_label(form.rating, null, {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(form.rating, {
                                    'attr': {
                                        'class': 'form-control' ~ (form.rating.vars.errors|length ? ' is-invalid' : ''),
                                        'min': '1',
                                        'max': '5',
                                        'required': 'required'
                                    }
                                }) }}
                                {{ form_errors(form.rating) }}
                                <div class="form-text">Choisissez une note entre 1 et 5</div>
                            </div>
                            
                            {% if form.client is defined %}
                            <div class="mb-3">
                                {{ form_label(form.client, null, {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(form.client, {
                                    'attr': {
                                        'class': 'form-select' ~ (form.client.vars.errors|length ? ' is-invalid' : '')
                                    }
                                }) }}
                                {{ form_errors(form.client) }}
                            </div>
                            {% endif %}
                        </div>
                    </div>
                    
                    <hr class="my-4">
                    
                    <div class="d-flex justify-content-between">
                        <a href="{{ path('app_feedback_index') }}" class="btn btn-outline-secondary">
                            <i data-feather="arrow-left" class="me-2"></i> Retour à la liste
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i data-feather="save" class="me-2"></i> Enregistrer
                        </button>
                    </div>
                {{ form_end(form) }}
            </div>
        </div>
    </div>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .char-counter {
            margin-top: -1rem;
        }
        .invalid-feedback {
            display: block;
            color: #dc3545;
            font-size: 0.875em;
            margin-top: 0.25rem;
        }
        /* Style optionnel pour le champ de note */
        input[type="number"] {
            -moz-appearance: textfield;
            width: 80px;
            text-align: center;
        }
        input[type="number"]::-webkit-inner-spin-button,
        input[type="number"]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Compteur de caractères
            const commentsField = document.querySelector('#{{ form.comments.vars.id }}');
            const charCount = document.getElementById('char-count');
            
            if (commentsField && charCount) {
                commentsField.addEventListener('input', function() {
                    charCount.textContent = this.value.length;
                });
                charCount.textContent = commentsField.value.length;
            }

            // Validation pour le champ de note
            const ratingInput = document.querySelector('#{{ form.rating.vars.id }}');
            if (ratingInput) {
                ratingInput.addEventListener('change', function() {
                    let value = parseInt(this.value);
                    if (value < 1) this.value = 1;
                    if (value > 5) this.value = 5;
                });
            }
        });
    </script>
{% endblock %}