{% extends 'User/base_dashboard.html.twig' %}

{% block title %}Edit Contract - EvoPlan{% endblock %}

{% block content %}
    <header class="page-header page-header-dark bg-gradient-primary-to-secondary pb-10">
        <div class="container-xl px-4">
            <div class="page-header-content pt-4">
                <div class="row align-items-center justify-content-between">
                    <div class="col-auto mt-4">
                        <h1 class="page-header-title">Edit Contract</h1>
                        <div class="page-header-subtitle">Update contract information</div>
                    </div>
                    <div class="col-12 col-xl-auto mt-4">
                        <a href="{{ path('app_contract_index') }}" class="btn btn-white lift">
                            <i class="fas fa-arrow-left me-1"></i>
                            Back to List
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <!-- Main page content-->
    <div class="container-xl px-4 mt-n10">
        <div class="row">
            <div class="col-xl-8">
                <div class="card mb-4">
                    <div class="card-header">Edit Contract</div>
                    <div class="card-body">
                        {{ include('contract/_form.html.twig', {'button_label': 'Update', 'button_class': 'btn-primary'}) }}
                    </div>
                </div>
            </div>
            <div class="col-xl-4">
                <div class="card mb-4">
                    <div class="card-header">Actions</div>
                    <div class="card-body">
                        <a href="{{ path('app_contract_show', {'id_contract': contract.id_contract}) }}" class="btn btn-info w-100 mb-2 lift">
                            <i class="fas fa-eye me-1"></i> View Details
                        </a>
                        {{ include('contract/_delete_form.html.twig', {'button_class': 'btn-danger w-100 lift'}) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize feather icons
            feather.replace();

            // Initialize form validation for date fields
            const startDateField = document.querySelector('[name$="[date_debut]"]');
            const endDateField = document.querySelector('[name$="[date_fin]"]');

            if (startDateField) {
                startDateField.addEventListener('change', function() {
                    validateDate(this);
                    // When start date changes, revalidate end date
                    if (endDateField && endDateField.value) {
                        validateDate(endDateField);
                    }
                });
            }

            if (endDateField) {
                endDateField.addEventListener('change', function() {
                    validateDate(this);
                });
            }

            // Add validation for status field
            const statusField = document.querySelector('[name$="[status]"]');
            if (statusField) {
                // Listen for changes on the status field
                statusField.addEventListener('change', function() {
                    // If the user tries to select "expired"
                    if (this.value === 'expired') {
                        // Show a warning
                        let warningMessage = document.querySelector('#status-warning');
                        if (!warningMessage) {
                            warningMessage = document.createElement('div');
                            warningMessage.id = 'status-warning';
                            warningMessage.className = 'alert alert-warning mt-2';
                            warningMessage.textContent = 'Note: Status can only be set to Expired if the partnership has ended.';
                            this.parentNode.appendChild(warningMessage);
                        }
                    } else {
                        // Remove the warning if status is not expired
                        const warningMessage = document.querySelector('#status-warning');
                        if (warningMessage) {
                            warningMessage.remove();
                        }
                    }
                });

                // Show warning if status is already expired
                if (statusField.value === 'expired') {
                    let warningMessage = document.querySelector('#status-warning');
                    if (!warningMessage) {
                        warningMessage = document.createElement('div');
                        warningMessage.id = 'status-warning';
                        warningMessage.className = 'alert alert-warning mt-2';
                        warningMessage.textContent = 'Note: Status can only be set to Expired if the partnership has ended.';
                        statusField.parentNode.appendChild(warningMessage);
                    }
                }
            }

            // Add validation for terms field
            const termsField = document.querySelector('[name$="[terms]"]');
            if (termsField) {
                termsField.addEventListener('input', function() {
                    if (!this.value.trim()) {
                        // Create a more visible error below the field
                        let errorAlert = document.querySelector('#terms-error');
                        if (!errorAlert) {
                            errorAlert = document.createElement('div');
                            errorAlert.id = 'terms-error';
                            errorAlert.className = 'alert alert-danger mt-2';
                            errorAlert.textContent = 'Contract terms cannot be empty.';
                            this.parentNode.appendChild(errorAlert);
                        }
                    } else {
                        // Remove any existing visible error
                        const errorAlert = document.querySelector('#terms-error');
                        if (errorAlert) {
                            errorAlert.remove();
                        }
                    }
                });

                // Check terms value on load
                if (!termsField.value.trim()) {
                    let errorAlert = document.querySelector('#terms-error');
                    if (!errorAlert) {
                        errorAlert = document.createElement('div');
                        errorAlert.id = 'terms-error';
                        errorAlert.className = 'alert alert-warning mt-2';
                        errorAlert.textContent = 'Contract terms cannot be empty.';
                        termsField.parentNode.appendChild(errorAlert);
                    }
                }
            }
        });
    </script>
{% endblock %}
